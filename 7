def func2(arg15, arg16):
    var65 = func3(arg15, arg16)
    def func10(arg66, arg67):
        var68 = arg67 - -703801673 + -956 + arg67
        var69 = (-994171261 + arg66 | var68) | arg66
        if var65 < arg16:
            var70 = (arg66 + arg15) - arg15 + arg15
        else:
            var70 = arg16 | var68
        var71 = (arg67 | var68) + var68 | arg15
        if arg66 < arg67:
            var72 = ((var69 - -753) ^ 384) - var65
        else:
            var72 = var68 + arg67 - var71 | var65
        var73 = ((474 - var68) | arg66) & var69
        if var69 < arg15:
            var74 = var73 - (arg16 ^ var65) + -601
        else:
            var74 = var73 + arg67 | var68
        var75 = var65 & -551 - -1348820725
        var76 = ((var71 + arg67) ^ arg16) | arg15
        var77 = (arg15 ^ arg15 ^ 116356932) - var76
        var78 = arg15 + arg15 + arg66 - arg16
        var79 = (1864338808 | var75 | var68) & var65
        var80 = (var76 - arg16 - var75) ^ -274
        var81 = var79 - var76 | arg16
        var82 = var79 - var77 + var78 & var71
        var83 = -618823687 - var65 | var80 | var78
        var84 = arg66 | var73
        result = var78 - (var69 ^ 871 - var78 | (var84 + ((var79 - var75 ^ (arg67 + var68)) + var77) + var82)) + arg67
        return result
    var85 = func10(arg16, arg15)
    var86 = var85 - var65
    var87 = (var85 & (arg15 - arg15 - (var65 | (var86 | arg15) & 1135677496) | (var65 & -1099022657)) - (var86 | arg15 ^ (arg16 | (-655 | ((var85 - arg15 & var86 & 147) & -1467370806 ^ var65))) + arg15) + var65) | var85
    var88 = (-393 & (617 | 577642205) ^ var87 & var87 & 836) | -1110502238
    result = arg16 | var86 - var86 | 64 + arg16 - var87 + ((var88 - arg15) + arg15 | var87) + var87 - arg15
    return result
def func3(arg17, arg18):
    var19 = 0
    for var64 in func4(var19, arg18):
        var19 += var19 | arg17 + 2
    return var19
def func5(arg22, arg23):
    var32 = var26(arg23, arg22)
    var37 = func9(arg22, var32)
    var38 = (arg23 | -6) + (var32 + arg22)
    var39 = (var38 ^ arg22 ^ arg22) ^ var32
    var40 = var32 - ((var37 | var38) & var37)
    var41 = var40 | arg23
    var42 = (var41 | 682) ^ arg22
    var43 = var40 + -400 + var38 + var40
    var44 = arg22 ^ 81
    var45 = var41 & 1495270616
    var46 = ((var41 & var45) | var44) - arg23
    var47 = var41 & (var40 & var37) + var45
    var48 = (var39 - var32) & var32 ^ var47
    var49 = var39 | var32
    var50 = var37 ^ var37 ^ (var32 + var45)
    var51 = arg22 & var37 & var45 | var46
    if var37 < var43:
        var52 = var37 ^ (var48 | var43) | 377
    else:
        var52 = -1050269930 & var48 + -1283285810
    result = var42 - var46
    return result
def func9(arg33, arg34):
    var35 = 0
    for var36 in range(41):
        var35 += (var35 + arg33) & var36
    return var35
def func8(arg27, arg28):
    var29 = 2142290898 | (arg27 - (arg27 | arg27) ^ ((arg28 & -394) - 1345570295) | (arg28 & (-661 ^ (arg27 | (-1596050808 + ((2111792207 + (56914596 ^ arg28 ^ 547)) & ((-165 ^ arg28) ^ -71))) & arg27 | 969854451 + 1560042404 ^ -993950086))))
    var30 = arg28 & arg27 - ((-329 & (140388488 ^ arg27 + var29)) & 784631756 | arg28 ^ ((((422184686 ^ -776) ^ arg27) & var29) ^ -288890588) ^ 532) & var29 + -522
    var31 = 44 & -427
    result = (arg28 | -393) - arg27
    return result
def func7():
    closure = [-8]
    def func6(arg24, arg25):
        closure[0] += func8(arg24, arg25)
        return closure[0]
    func = func6
    return func
var26 = func7()
def func4(arg20, arg21):
    var53 = func5(-1096797381, arg20)
    yield var53
    var54 = arg20 + 964
    yield var54
    var55 = (-719 ^ 278594309) | arg20
    yield var55
    var56 = var55 & arg21
    yield var56
    var57 = arg21 + ((arg21 ^ 738923194) - var56)
    yield var57
    var58 = ((var56 | var56) ^ var55) + arg20
    yield var58
    var59 = (var55 + var56 | var54) & var58
    yield var59
    var60 = ((-82 | var57) & var55) ^ arg20
    yield var60
    var61 = -452027744 ^ 53 + (var57 ^ var60)
    yield var61
    var62 = var59 ^ -574 ^ var58 ^ var60
    yield var62
    var63 = -217302265 ^ var58
    yield var63
def func1(arg1, arg2):
    var3 = 773154427 + (1364382757 ^ -1343598603 - -999991994)
    var4 = 1221794400 ^ (arg2 | arg2) - var3
    var5 = var4 ^ arg1
    var6 = var4 - ((arg2 & arg1) - -376)
    var7 = arg1 + (arg2 - var3) - arg2
    var8 = var6 & var7
    var9 = var4 | 764
    var10 = -95 + var3 ^ var9
    if arg1 < var4:
        var11 = ((var5 + var6) & var10) + -74
    else:
        var11 = arg2 + (-876015686 & var5) | var7
    var12 = var10 - 124850376 ^ (var5 & var4)
    var13 = (arg2 ^ var12) + var12
    var14 = var3 ^ -1070820436 & var5
    result = arg1 & ((var9 + var6) ^ -628)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 15'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 89'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
